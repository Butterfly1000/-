★背景：
innodb存储引擎是聚集索引，也就是数据和索引是合并在一个文件里面的，以.ibd结尾。今天查看了一下该文件，发现并没有以.ibd结尾的文件。
是为什么呢？因为开启了共享表空间。那么下面就学习一下，共享表空间和独立表空间。

★简介
Innodb存储引擎可将所有数据存放于ibdata*文件的共享表空间，也可将每张表存放于独立的.ibd文件的独立表空间。
共享表空间以及独立表空间都是针对"数据的存储"方式而言的。
共享表空间:  某一个数据库的所有的表数据，索引文件全部放在一个文件中，默认这个共享表空间的文件路径在data目录下。 默认的文件名为:ibdata1  初始化为10M。
独立表空间:  每一个表都将会生成以独立的文件方式来进行存储，每一个表都有一个.frm表描述文件，还有一个.ibd文件。 其中这个文件包括了单独一个表的数据内容以
            及索引内容，默认情况下它的存储位置也是在表的位置之中。
            
★二者优缺点
共享表空间：
优点：
可以将表空间分成多个文件存放到各个磁盘上（表空间文件大小不受表大小的限制，如一个表可以分布在不同的文件上）。数据和文件放在一起方便管理。
缺点：
所有的数据和索引存放到一个文件中，虽然可以把一个大文件分成多个小文件，但是多个表及索引在表空间中混合存储，这样对于一个表做了大量删除操作
后表空间中将会有大量的空隙，特别是对于统计分析，日值系统这类应用最不适合用共享表空间。

独立表空间：
在配置文件（my.cnf）中设置： innodb_file_per_table
优点：
1.每个表都有自已独立的表空间。
2.每个表的数据和索引都会存在自已的表空间中。
3.可以实现单表在不同的数据库中移动。
4.空间可以回收（除drop table操作处，表空不能自已回收）
  a.Drop table操作自动回收表空间，如果对于统计分析或是日值表，删除大量数据后可以通过:alter table TableName engine=innodb;回缩不用的空间。
  b.对于使innodb-plugin的Innodb使用turncate table也会使空间收缩。
  c.对于使用独立表空间的表，不管怎么删除，表空间的碎片不会太严重的影响性能，而且还有机会处理。
缺点：
单表增加过大，如超过100个G。相比较之下，使用独占表空间的效率以及性能会更高一点。


        
            
————————————————
原文链接：https://blog.csdn.net/jesseyoung/java/article/details/42236615
